#!/bin/bash

# Script para aplicar la migraci√≥n de image_url
# Este script debe ejecutarse despu√©s de que la aplicaci√≥n est√© corriendo

set -e

echo "üîÑ Aplicando migraci√≥n para agregar campo image_url..."

# Verificar que Docker Compose est√© corriendo
if ! docker-compose ps | grep -q "Up"; then
    echo "‚ùå Error: Los servicios no est√°n corriendo. Ejecuta primero: docker-compose up -d"
    exit 1
fi

# Esperar a que la base de datos est√© lista
echo "‚è≥ Esperando a que la base de datos est√© lista..."
sleep 10

# Aplicar la migraci√≥n
echo "üóÑÔ∏è Ejecutando migraci√≥n en la base de datos..."
docker-compose exec -T db psql -U pokemon_user -d pokemon_db -f /docker-entrypoint-initdb.d/add_image_url_column.sql

# Verificar que la migraci√≥n se aplic√≥ correctamente
echo "‚úÖ Verificando que la migraci√≥n se aplic√≥ correctamente..."
docker-compose exec -T db psql -U pokemon_user -d pokemon_db -c "\d pokemon" | grep -q "image_url" && echo "‚úÖ Campo image_url agregado exitosamente" || echo "‚ùå Error al agregar campo image_url"

# Mostrar algunos Pok√©mon con sus im√°genes
echo "üìã Mostrando algunos Pok√©mon con sus im√°genes:"
docker-compose exec -T db psql -U pokemon_user -d pokemon_db -c "SELECT id, name, image_url FROM pokemon WHERE id <= 10;"

echo "üéâ Migraci√≥n completada exitosamente!"
echo ""
echo "üìù Ahora puedes:"
echo "1. Reiniciar la aplicaci√≥n: docker-compose restart app"
echo "2. Probar la API con el nuevo campo image_url"
echo "3. Acceder a la documentaci√≥n: http://localhost:8001/docs" 